<project name="c3p0" default="dist">

   <!-- ignore the CLASSPATH environment variable. force builds to specify classpaths -->
   <property name="build.sysclasspath" value="ignore" />

   <property file="build.properties" />
   <property file="version.properties" />

   <property name="c3p0.name" value="c3p0-${c3p0.version}" />
   <property name="bindist.name" value="${c3p0.name}.bin" />
   <property name="srcdist.name" value="${c3p0.name}.src" />
   <property name="src.dir" value="src" />
   <property name="java.src.dir" value="${src.dir}/classes" />
   <property name="codegen.src.dir" value="${src.dir}/codegen" />
   <property name="doc.src.dir" value="${src.dir}/doc" />
   <property name="static.dist.src" value="${src.dir}/dist-static" />
   <property name="test.props.dir" value="test-properties" />
   <property name="build.dir" value="build" />
   <property name="build.codegen.dir" value="${build.dir}/codegen" />
   <property name="build.classes.dir" value="${build.dir}/classes" />
   <property name="build.apidocs.dir" value="${build.dir}/apidocs" />
   <property name="dbms.dir" value="dbms" />
   <property name="dbms.oracle.thin.antproj.dir" value="${dbms.dir}/oracle-thin" />
   <property name="dbms.oracle.thin.antproj.dist.dir" value="${dbms.oracle.thin.antproj.dir}/dist" />
   <property name="test.classes.dir" value="${build.dir}/testclasses" />
   <property name="dist.dir" value="dist" />
   <property name="license.header.file" value="src/legal.prepend" />
   <property name="build.jar.file" value="build/${c3p0.name}.jar" />
   <property name="open.dist" value="${dist.dir}/${bindist.name}" />
   <property name="open.dist.doc.dir" value="${open.dist}/doc" />
   <property name="open.dist.lib.dir" value="${open.dist}/lib" />

   <!-- j2ee.jar.base.dir should be set externally if desired  -->
   <!-- we set thr property here only to keep classpaths valid -->
   <!-- when users do not set the path                         -->
   <property name="j2ee.jar.base.dir" value="" />

   <path id="codegen-classpath">
       <pathelement location="${build.classes.dir}" />
       <pathelement path="${j2ee.classpath}" />
       <fileset dir="${j2ee.jar.base.dir}" includes="**/*.jar" />
   </path>

   <property name="codegen.classpath" refid="codegen-classpath" />

   <path id="build-classpath">
       <pathelement location="${build.classes.dir}" />
       <pathelement path="${j2ee.classpath}" />
       <fileset dir="${j2ee.jar.base.dir}" includes="**/*.jar" />
   </path>

   <patternset id="dist-jar-classes"> <!-- excludes stuff only used by the code generator and by tests-->
       <exclude name="com/mchange/v2/codegen/bean/*.java" />
       <exclude name="com/mchange/v2/codegen/*.java" />
       <exclude name="com/mchange/v1/jvm/**" />
       <exclude name="com/mchange/v1/lang/**" />
       <exclude name="com/mchange/v1/xml/**" />
       <exclude name="com/mchange/v2/c3p0/codegen/**" />
       <exclude name="com/mchange/v2/c3p0/test/**" />
   </patternset>   

   <patternset id="test-only-classes">
       <include name="com/mchange/v2/c3p0/test/**" />
   </patternset>

   <path id="test-classpath">
       <pathelement location="${build.jar.file}" />
       <pathelement location="${test.classes.dir}" />
       <pathelement path="${j2ee.classpath}" />
       <fileset dir="${j2ee.jar.base.dir}" includes="**/*.jar" />
       <pathelement location="${test.jdbc.driver.jar.file}" />
       <pathelement location="${test.props.dir}" />
   </path>

   <target name="init">
      <mkdir dir="${build.dir}" />
      <mkdir dir="${build.codegen.dir}" />
      <mkdir dir="${build.classes.dir}" />
      <mkdir dir="${build.apidocs.dir}" />
      <mkdir dir="${dist.dir}" />
   </target>

   <target name="clean" depends="dbms-oracle-thin-clean">
      <delete dir="${build.dir}" />
      <delete dir="${dist.dir}" />
   </target>

   <target name="init-codegen" depends="init">
      <javac srcdir="${java.src.dir}"
             destdir="${build.classes.dir}" 
             includes="com/mchange/v2/c3p0/codegen/**/*.java"
             classpathref="codegen-classpath"
             debug="true" />
      <uptodate property="up-to-date-proxies" 
                srcfile="${java.src.dir}/com/mchange/v2/c3p0/codegen/JdbcProxyGenerator.java"
                targetfile="${build.codegen.dir}/com/mchange/v2/c3p0/impl/NewProxyConnection.java" />
   </target>

   <target name="beangen" depends="init-codegen">
      <apply executable="java" dest="${build.codegen.dir}"> 
        <arg value="-classpath" />
        <arg path="${codegen.classpath}" />
        <arg value="com.mchange.v2.c3p0.codegen.BeangenDataSourceGenerator" />
        <srcfile />
        <targetfile />
        <fileset dir="${codegen.src.dir}" includes="**/*.beangen-xml">
	  <exclude name="**/bad/**" />
	  <exclude name="**/old/**" />
	  <exclude name="**/private/**" />
	</fileset>
        <mapper type="glob" from="*.beangen-xml" to="*.java" />
      </apply>
   </target>

   <target name="newproxygen" depends="init-codegen" unless="up-to-date-proxies">
      <java classname="com.mchange.v2.c3p0.codegen.JdbcProxyGenerator" fork="true" dir=".">
	<classpath refid="codegen-classpath" />
        <arg value="${build.codegen.dir}" />
      </java>
   </target>

   <target name="codegen" depends="beangen,newproxygen" />

   <target name="compile" depends="codegen">
      <javac destdir="${build.classes.dir}" 
             classpathref="build-classpath" 
             debug="on">
          <sourcepath>
             <pathelement location="${build.codegen.dir}" />
             <pathelement location="${java.src.dir}" />
          </sourcepath>
          <src>
             <pathelement location="${build.codegen.dir}" />
             <pathelement location="${java.src.dir}" />
          </src>
      </javac>
   </target>

   <target name="jar" depends="compile">
      <jar destfile="${build.jar.file}">
        <fileset dir="${build.classes.dir}">
          <patternset refid="dist-jar-classes"/>
        </fileset>
      </jar>
   </target>

   <target name="dbms-oracle-thin-ant">
      <ant dir="${dbms.oracle.thin.antproj.dir}" target="${subproject.target}" inheritAll="false">
	<property name="c3p0.version" value="${c3p0.version}" />
	<property name="c3p0.jar.file" location="${build.jar.file}" />
	<property name="oracle-thin.jdbc.jar.file" value="${oracle-thin.jdbc.jar.file}" />
      </ant>
   </target>

   <target name="dbms-oracle-thin-clean">
       <antcall target="dbms-oracle-thin-ant"> 
          <param name="subproject.target" value="clean" />
       </antcall>
   </target>

   <target name="dbms-oracle-thin" depends="jar" if="oracle-thin.jdbc.jar.file">
       <echo message="oracle-thin.jdbc.jar.file: ${oracle-thin.jdbc.jar.file}" />
       <antcall target="dbms-oracle-thin-ant"> 
          <param name="subproject.target" value="dist" />
       </antcall>
   </target>

   <target name="test-init" depends="jar">
      <mkdir dir="${test.classes.dir}" />
      <copy toDir="${test.classes.dir}">
        <fileset dir="${build.classes.dir}">
             <patternset refid="test-only-classes"/>
        </fileset>
      </copy>
   </target>

   <target name="stats-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.StatsTest" 
         classpathref="test-classpath" 
	 fork="true">
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <!-- <jvmarg value="-Xrunhprof:file=/tmp/java.hprof,doe=y,format=b" /> -->
           <!-- <jvmarg value="-verbose:class" /> -->
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="proxywrapper-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.ProxyWrappersTest" 
         classpathref="test-classpath" 
	 fork="true">
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <!-- <jvmarg value="-Xrunhprof:file=/tmp/java.hprof,doe=y,format=b" /> -->
           <!-- <jvmarg value="-verbose:class" /> -->
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="benchmark-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.C3P0BenchmarkApp" 
         classpathref="test-classpath" 
	 fork="true">
           <!-- <jvmarg value="-Xrunhprof:cpu=times,file=/tmp/java.hprof,doe=y,format=a" /> -->
           <!-- <jvmarg value="-Xprof" /> -->
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="rco-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.RawConnectionOpTest" 
         classpathref="test-classpath" 
	 	 fork="true">
           <!-- <jvmarg value="-Xrunhprof:cpu=times,file=/tmp/java.hprof,doe=y,format=a" /> -->
           <!-- <jvmarg value="-Xprof" /> -->
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="load-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.LoadPoolBackedDataSource" 
         classpathref="test-classpath" 
	 fork="true">
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="psload-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.PSLoadPoolBackedDataSource" 
         classpathref="test-classpath" 
	 fork="true">
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="onethreadrepeat-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.OneThreadRepeatedInsertOrQueryTest" 
         classpathref="test-classpath" 
	 fork="true">
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="refser-test" depends="test-init">
       <java 
         classname="com.mchange.v2.c3p0.test.TestRefSerStuff" 
         classpathref="test-classpath" 
	 fork="true">
           <sysproperty key="jdbc.drivers" value="${test.jdbc.drivers}" />
           <arg value="${test.jdbc.url}" />
           <arg value="${test.jdbc.user}" />
           <arg value="${test.jdbc.password}" />
       </java>
   </target>

   <target name="javadocs" depends="init">
      <javadoc packagenames="com.mchange.v2.c3p0"
               sourcepath="${java.src.dir}"
               destdir="${build.apidocs.dir}" 
               classpathref="build-classpath" 
               windowtitle="${c3p0.name} API Documentation"
      />
   </target>

   <target name="basic-open-dist" depends="jar, javadocs">
      <copy toDir="${open.dist}">
         <fileset dir="${static.dist.src}">
           <exclude name="*~" />
           <exclude name="examples/*.class" />
           <exclude name="**/old/**" />
           <exclude name="**/bad/**" />
           <exclude name="**/private/**" />
         </fileset>
      </copy>
      <mkdir dir="${open.dist.doc.dir}/apidocs" />
      <copy toDir="${open.dist.doc.dir}">
         <fileset dir="${doc.src.dir}" excludes="*.png"/>
	 <filterchain>
           <replacetokens>
              <token key="c3p0.version" value="${c3p0.version}"/>
           </replacetokens>
	 </filterchain>
      </copy>
      <copy toDir="${open.dist.doc.dir}">
         <fileset dir="${doc.src.dir}" includes="*.png"/>
      </copy>
      <copy toDir="${open.dist.doc.dir}/apidocs">
         <fileset dir="${build.apidocs.dir}" />
      </copy>
      <copy file="${build.jar.file}" toDir="${open.dist.lib.dir}" />
   </target>

   <target name="oracle-thin-open-dist" depends="basic-open-dist, dbms-oracle-thin"  if="oracle-thin.jdbc.jar.file">
      <copy toDir="${open.dist}">
         <fileset dir="${dbms.oracle.thin.antproj.dist.dir}" />
      </copy>
   </target>

   <target name="open-dist" depends="basic-open-dist, oracle-thin-open-dist" />

   <target name="zip-dist" depends="open-dist">
      <zip destfile="${dist.dir}/${bindist.name}.zip">
        <zipfileset dir="${open.dist}" prefix="${c3p0.name}"/>
      </zip>
   </target>

   <target name="tar-dist" depends="open-dist">
      <tar destfile="${dist.dir}/${bindist.name}.tar">
        <tarfileset dir="${open.dist}" prefix="${c3p0.name}"/>
      </tar>
   </target>

   <target name="tgz-dist" depends="tar-dist">
      <gzip zipfile="${dist.dir}/${bindist.name}.tgz" src="${dist.dir}/${bindist.name}.tar" />
   </target>

   <target name="bindist" depends="tgz-dist, zip-dist" />

   <target name="dist" depends="bindist" />

   <target name="srcdist">
      <zip destfile="${dist.dir}/${srcdist.name}.zip">
        <zipfileset dir="." prefix="${srcdist.name}">
           <exclude name="${build.dir}/**"/>
           <exclude name="${dist.dir}/**"/>
           <exclude name="**/*.class"/>
           <exclude name="**/old/**"/>
           <exclude name="**/bad/**"/>
           <exclude name="**/private/**"/>
        </zipfileset>
      </zip>
      <tar destfile="${dist.dir}/${srcdist.name}.tar">
        <tarfileset dir="." prefix="${srcdist.name}">
           <exclude name="${build.dir}/**"/>
           <exclude name="${dist.dir}/**"/>
           <exclude name="**/*.class"/>
           <exclude name="**/old/**"/>
           <exclude name="**/bad/**"/>
           <exclude name="**/private/**"/>
        </tarfileset>
      </tar>
      <gzip zipfile="${dist.dir}/${srcdist.name}.tgz" src="${dist.dir}/${srcdist.name}.tar" />
   </target>

   <target name="all" depends="dist,srcdist" />

</project>

